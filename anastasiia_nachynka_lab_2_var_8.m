% Лабораторна робота з проектування цифрових фільтрів
% Варіант 8
% Задані параметри фільтрів:

% ФНЧ (Фільтр низьких частот):
% Частота пропускання (fp) = 120 Гц
% Частота загородження (fs) = 220 Гц
% Пульсації в смузі пропускання (Rp) = 3 дБ
% Загасання в смузі загородження (Rs) = 20 дБ
% Частота дискретизації (Fs) = 1 кГц

% ФВЧ (Фільтр високих частот):
% Частота пропускання (fp) = 220 Гц
% Частота загородження (fs) = 120 Гц
% Пульсації в смузі пропускання (Rp) = 3 дБ
% Загасання в смузі загородження (Rs) = 20 дБ
% Частота дискретизації (Fs) = 1 кГц

% ------------------- ФНЧ -------------------

% Задані параметри
fp = 120;   % Частота пропускання, Гц
fs = 220;   % Частота загородження, Гц
Rp = 3;     % Пульсації в смузі пропускання, дБ
Rs = 20;    % Загасання в смузі загородження, дБ
Fs = 1000;  % Частота дискретизації, Гц

% Нормалізація частот
Wp = fp / (Fs/2);  % Нормалізована частота пропускання
Ws = fs / (Fs/2);  % Нормалізована частота загородження

% Перетворення частот в аналогові (перед дискретизацією)
omega_p = 2 * Fs * tan(pi * Wp / 2);
omega_s = 2 * Fs * tan(pi * Ws / 2);

% Розрахунок порядку фільтра (для ФНЧ)
n_butter = ceil(log10((10^(Rs/10)-1)/(10^(Rp/10)-1)) / (2 * log10(omega_s / omega_p)));

% Розрахунок частоти зрізу
omega_c = omega_p / ((10^(Rp/10)-1)^(1/(2*n_butter)));

% Перетворення назад в цифрову частоту
Wn_butter = (2 / pi) * atan(omega_c / (2 * Fs));

% Побудова фільтра Баттерворта
[b_butter, a_butter] = butter(n_butter, Wn_butter);

fprintf('ФНЧ Баттерворта: порядок = %d, Wn = %.4f\n', n_butter, Wn_butter);

% Побудова АЧХ та ФЧХ
figure;
freqz(b_butter, a_butter, 1024, Fs);
title('АЧХ та ФЧХ ФНЧ Баттерворта');
subplot(2,1,1);
ylim([-100 20]);

% Побудова карти нулів та полюсів
figure;
zplane(b_butter, a_butter);
title('Нулі та полюси ФНЧ Баттерворта');

% Реалізація прямої структури фільтра
N = 50;  % Кількість відліків для імпульсної характеристики
x = [1; zeros(N-1,1)];  % Одиничний імпульс
y = zeros(N,1);  % Ініціалізація вихідного сигналу
order = n_butter;  % Порядок фільтра
b = b_butter;
a = a_butter;

% Реалізація різницевого рівняння (пряма структура)
for n = 1:N
    y(n) = b(1)*x(n);
    for k = 2:length(b)
        if n - k + 1 > 0
            y(n) = y(n) + b(k)*x(n - k + 1);
        end
    end
    for k = 2:length(a)
        if n - k + 1 > 0
            y(n) = y(n) - a(k)*y(n - k + 1);
        end
    end
end

% Побудова імпульсної характеристики
figure;
stem(0:N-1, y);
title('Імпульсна характеристика ФНЧ Баттерворта (пряма структура)');
xlabel('Номер відліку n');
ylabel('Амплітуда');

% ------------------- ФВЧ -------------------

% Задані параметри
fp = 220;   % Частота пропускання, Гц
fs = 120;   % Частота загородження, Гц
Rp = 3;     % Пульсації в смузі пропускання, дБ
Rs = 20;    % Загасання в смузі загородження, дБ
Fs = 1000;  % Частота дискретизації, Гц

% Нормалізація частот
Wp = fp / (Fs/2);  % Нормалізована частота пропускання
Ws = fs / (Fs/2);  % Нормалізована частота загородження

% Перетворення частот в аналогові
omega_p = 2 * Fs * tan(pi * Wp / 2);
omega_s = 2 * Fs * tan(pi * Ws / 2);

% **Виправлення формули для розрахунку порядку фільтра (для ФВЧ)**
n_butter_hp = ceil(log10((10^(Rs/10)-1)/(10^(Rp/10)-1)) / (2 * log10(omega_p / omega_s)));

% **Розрахунок частоти зрізу для ФВЧ**
omega_c_hp = omega_p * ((10^(Rp/10)-1)^(1/(2*n_butter_hp)));

% Перетворення назад в цифрову частоту
Wn_butter_hp = (2 / pi) * atan(omega_c_hp / (2 * Fs));

% Побудова фільтра Баттерворта
[b_butter_hp, a_butter_hp] = butter(n_butter_hp, Wn_butter_hp, 'high');

fprintf('ФВЧ Баттерворта: порядок = %d, Wn = %.4f\n', n_butter_hp, Wn_butter_hp);

% Побудова АЧХ та ФЧХ
figure;
freqz(b_butter_hp, a_butter_hp, 1024, Fs);
title('АЧХ та ФЧХ ФВЧ Баттерворта');
subplot(2,1,1);
ylim([-100 20]);

% Побудова карти нулів та полюсів
figure;
zplane(b_butter_hp, a_butter_hp);
title('Нулі та полюси ФВЧ Баттерворта');

% Реалізація прямої структури фільтра
N = 50;  % Кількість відліків для імпульсної характеристики
x = [1; zeros(N-1,1)];  % Одиничний імпульс
y_hp = zeros(N,1);  % Ініціалізація вихідного сигналу
order_hp = n_butter_hp;  % Порядок фільтра
b_hp = b_butter_hp;
a_hp = a_butter_hp;

% Реалізація різницевого рівняння (пряма структура)
for n = 1:N
    y_hp(n) = b_hp(1)*x(n);
    for k = 2:length(b_hp)
        if n - k + 1 > 0
            y_hp(n) = y_hp(n) + b_hp(k)*x(n - k + 1);
        end
    end
    for k = 2:length(a_hp)
        if n - k + 1 > 0
            y_hp(n) = y_hp(n) - a_hp(k)*y_hp(n - k + 1);
        end
    end
end

% Побудова імпульсної характеристики
figure;
stem(0:N-1, y_hp);
title('Імпульсна характеристика ФВЧ Баттерворта (пряма структура)');
xlabel('Номер відліку n');
ylabel('Амплітуда');

% ------------------- Розрахунок нулів та полюсів -------------------

% ФНЧ Баттерворта
[z_butter, p_butter, k_butter] = tf2zpk(b_butter, a_butter);
figure;
zplane(z_butter, p_butter);
title('Нулі та полюси ФНЧ Баттерворта');

% ФВЧ Баттерворта
[z_butter_hp, p_butter_hp, k_butter_hp] = tf2zpk(b_butter_hp, a_butter_hp);
figure;
zplane(z_butter_hp, p_butter_hp);
title('Нулі та полюси ФВЧ Баттерворта');

% ------------------- Обчислення імпульсної характеристики за допомогою filter -------------------

% ФНЧ Баттерворта
h_imp = filter(b_butter, a_butter, x);
figure;
stem(0:N-1, h_imp);
title('Імпульсна характеристика ФНЧ Баттерворта (filter)');
xlabel('Номер відліку n');
ylabel('Амплітуда');

% ФВЧ Баттерворта
h_imp_hp = filter(b_butter_hp, a_butter_hp, x);
figure;
stem(0:N-1, h_imp_hp);
title('Імпульсна характеристика ФВЧ Баттерворта (filter)');
xlabel('Номер відліку n');
ylabel('Амплітуда');

% ------------------- Виведення коефіцієнтів та різницевих рівнянь -------------------
% Різницеві рівняння аналогічні для обох фільтрів:
% y(n) = -a(2)*y(n-1) - a(3)*y(n-2) - ... + b(1)*x(n) + b(2)*x(n-1) + ...
% ФНЧ Баттерворта
disp('Коефіцієнти чисельника (b) для ФНЧ:');
disp(b_butter);
disp('Коефіцієнти знаменника (a) для ФНЧ:');
disp(a_butter);

% Формування рівняння для ФНЧ
fprintf('Різницеве рівняння для ФНЧ:\n');
fprintf('y(n) = ');
for k = 2:length(a_butter)
    fprintf('%.4f*y(n-%d) ', -a_butter(k), k-1);
    if k < length(a_butter), fprintf('+ '); end
end
for k = 1:length(b_butter)
    if k == 1
        fprintf('+ %.4f*x(n) ', b_butter(k));
    else
        fprintf('+ %.4f*x(n-%d) ', b_butter(k), k-1);
    end
end
fprintf('\n\n');

% ФВЧ Баттерворта
disp('Коефіцієнти чисельника (b) для ФВЧ:');
disp(b_butter_hp);
disp('Коефіцієнти знаменника (a) для ФВЧ:');
disp(a_butter_hp);

% Формування рівняння для ФВЧ
fprintf('Різницеве рівняння для ФВЧ:\n');
fprintf('y(n) = ');
for k = 2:length(a_butter_hp)
    fprintf('%.4f*y(n-%d) ', -a_butter_hp(k), k-1);
    if k < length(a_butter_hp), fprintf('+ '); end
end
for k = 1:length(b_butter_hp)
    if k == 1
        fprintf('+ %.4f*x(n) ', b_butter_hp(k));
    else
        fprintf('+ %.4f*x(n-%d) ', b_butter_hp(k), k-1);
    end
end
fprintf('\n');

% ------------------- Висновки -------------------

% У результаті лабораторної роботи було спроектовано цифрові фільтри
% низьких та високих частот Баттерворта для заданих параметрів.
% Було визначено мінімальний порядок фільтрів, побудовано амплітудно-частотні
% та фазочастотні характеристики, карти нулів та полюсів, а також
% імпульсні характеристики обох фільтрів.
% Фільтри Баттерворта забезпечують плавний перехід у смузі пропускання без
% пульсацій, але їх фазова характеристика є нелінійною. У порівнянні з FIR-фільтрами,
% IIR-фільтри Баттерворта мають нижчий порядок для досягнення
% схожих характеристик загородження, проте можуть бути нестійкими.
% У ході лабораторної роботи ми проаналізували їхню стійкість за допомогою
% карти нулів та полюсів і переконалися у коректності роботи фільтрів.

% -----------------------------------------